<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p">

	<description>Example configuration to get you started.</description>


	<tx:annotation-driven />


	<!-- <bean id="sessionFactory" -->
	<!-- class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- <property name="packagesToScan" value="com.innowhite.PlaybackApp" /> -->
	<!-- <property name="schemaUpdate" value="true" /> -->
	<!-- <property name="hibernateProperties"> -->
	<!-- <props> -->
	<!-- <prop key="hibernate.format_sql">true</prop> -->
	<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->


	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>

				<value>classpath:innowhite.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${pword}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.innowhite.PlayBackWebApp" />
		<property name="schemaUpdate" value="false" />
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />


		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="use_sql_comments">true</prop>


			</props>
		</property>
	</bean>

	<bean id="whiteboardDataDao" name="whiteboardDataDao"
		class="com.innowhite.PlayBackWebApp.dao.WhiteboardDataDao">

		<property name="sessionFactory" ref="sessionFactory" />

	</bean>

	<bean id="audioDataDao" name="audioDataDao"
		class="com.innowhite.PlayBackWebApp.dao.AudioDataDao">

		<property name="sessionFactory" ref="sessionFactory" />

	</bean>

	<bean id="videoDataDao" name="videoDataDao"
		class="com.innowhite.PlayBackWebApp.dao.VideoDataDao">

		<property name="sessionFactory" ref="sessionFactory" />

	</bean>


	<bean id="roomDataDao" name="roomDataDao"
		class="com.innowhite.PlayBackWebApp.dao.RoomDataDao">

		<property name="sessionFactory" ref="sessionFactory" />

	</bean>



</beans>
