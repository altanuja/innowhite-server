<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/jms 
       http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p">


	<description>Example configuration to get you started.</description>


	<tx:annotation-driven />


	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>

				<value>WEB-INF/spring/innowhite.properties</value>
				
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${pword}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.innowhite.mp4converter" />
		<property name="schemaUpdate" value="false" />
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="use_sql_comments">true</prop>

				<prop key="hibernate.c3p0.acquire_increment">${hibernate.c3p0.acquireIncrement}</prop>
				<prop key="hibernate.c3p0.idle_test_period">${hibernate.c3p0.idleConnectionTestPeriod}</prop>
				<prop key="hibernate.c3p0.timeout">${hibernate.c3p0.maxIdleTime}</prop>
				<prop key="hibernate.c3p0.max_size">${hibernate.c3p0.maxPoolSize}</prop>
				<prop key="hibernate.c3p0.min_size">${hibernate.c3p0.minPoolSize}</prop>
			</props>
		</property>
		
	</bean>
	
	


	<!-- A connection to ActiveMQ -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
		p:brokerURL="tcp://messaging.innowhite.com:61616" />


	<!-- A cached connection to wrap the ActiveMQ connection -->
	<bean id="cachedConnectionFactory"	class="org.springframework.jms.connection.CachingConnectionFactory"
		p:targetConnectionFactory-ref="amqConnectionFactory" p:sessionCacheSize="10" />


	<!-- A POJO that implements the JMS message listener for MP4Converter  -->
	<bean id="MP4ConverterMsgListener" class="com.innowhite.mp4converter.messaging.MP4ConverterMsgListener">
 		<property name="mp4ConverterService" ref="mp4ConverterService" /> 
	</bean>
	
	<!-- The Spring message listener container configuration -->
	<jms:listener-container container-type="default" connection-factory="cachedConnectionFactory" acknowledge="auto">
	<jms:listener destination="Innowhite.mp4converter" ref="MP4ConverterMsgListener"
			method="onMessage" />
	</jms:listener-container>
	
	
	<bean id="mp4ConverterService" name="mp4ConverterService" class="com.innowhite.mp4converter.service.MP4ConverterService">
		<property name="mp4ConverterDAO" ref="mp4ConverterDAO" />
		<property name="ffmpegInfoVO" ref="ffmpegInfoVO" />
		<property name="callBackUrlsDao" ref="callBackUrlsDao" />
		
	</bean>
	
	
	<bean id="callBackUrlsDao" name="callBackUrlsDao" class="com.innowhite.mp4converter.dao.CallBackUrlsDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	<bean id="mp4ConverterDAO" name="mp4ConverterDAO" class="com.innowhite.mp4converter.dao.MP4ConverterDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="ffmpegInfoVO" name="ffmpegInfoVO" class="com.innowhite.mp4converter.model.FFMPEGInfoVO">
		<property name="winFFmpegPath" value="${winFFmpegPath}" />
		<property name="winFilePath" value="${winFilePath}" />
	</bean>
	
	<bean id="dbPollerService" name="dbPollerService" class="com.innowhite.mp4converter.service.DBPollerService">
		<property name="mp4ConverterDAO" ref="mp4ConverterDAO" />
	</bean>

</beans>
