<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p">

	<!-- Root Context: defines shared resources visible to all other web components -->


	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/innowhite.properties">  <!--reads config.properties file -->
		</property>
	</bean>


	<!-- A JMS connection factory for ActiveMQ -->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
		p:brokerURL="tcp://messaging.innowhite.com:61616" />

	<!-- A POJO that implements the JMS message listener -->
	<bean id="simpleMessageListener"
		class="com.innowhite.whiteboard.docconversion.messages.ConversionMessageListener">
		<property name="thumbsCommand" value="${thumbsCommand}" />
		<property name="imgActualFileCommand" value="${imgActualFileCommand}" />
		<property name="swfActualFileCommand" value="${swfActualFileCommand}" />
		<property name="convertType" value="${convertType}" />
		<property name="pdfToThumbnail" value="${pdfToThumbnail}" />
		<property name="pdfToSwf" value="${pdfToSwf}" />
	</bean>



	<bean id="documentConversionService" class="com.innowhite.docconversion.DocumentConversionServiceImp">
		<property name="messagingService" ref="messagingService"/>
		<property name="officeToPdfConversionService" ref="officeToPdfConversionService"/>
		<property name="pdfToSwfSlidesGenerationService" ref="pdfToSwfSlidesGenerationService"/>
		<property name="imageToSwfSlidesGenerationService" ref="imageToSwfSlidesGenerationService"/>
	</bean>
	
	<bean id="officeToPdfConversionService" class="com.innowhite.docconversion.impl.OfficeToPdfConversionService"/>
	
	<bean id="pageExtractor" class="com.innowhite.docconversion.impl.GhostscriptPageExtractor">
		<property name="ghostscriptExec" value="${ghostScriptExec}"/>
		<property name="noPdfMarkWorkaround" value="${noPdfMarkWorkaround}"/>
	</bean>
	
	<bean id="imageMagickPageConverter" class="com.innowhite.docconversion.impl.ImageMagickPageConverter">
		<property name="imageMagickDir" value="${imageMagickDir}"/>
	</bean>
		
	<bean id="png2SwfConverter" class="com.innowhite.docconversion.impl.Png2SwfPageConverter">
		<property name="swfToolsDir" value="${swfToolsDir}"/>
	</bean>
	
	<bean id="jpg2SwfConverter" class="com.innowhite.docconversion.impl.Jpeg2SwfPageConverter">
		<property name="swfToolsDir" value="${swfToolsDir}"/>
	</bean>
		
	<bean id="pageCounter" class="com.innowhite.docconversion.impl.Pdf2SwfPageCounter">
		<property name="swfToolsDir" value="${swfToolsDir}"/>
	</bean>
		
	<bean id="pageCounterService" class="com.innowhite.docconversion.impl.PageCounterService">
		<property name="pageCounter" ref="pageCounter"/>
		<property name="maxNumPages" value="${maxNumPages}"/>
	</bean>
	
	<bean id="pdf2SwfPageConverter" class="com.innowhite.docconversion.impl.Pdf2SwfPageConverter">
		<property name="swfToolsDir" value="${swfToolsDir}"/>
		<property name="fontsDir" value="${fontsDir}"/>
	</bean>
	
	<bean id="imageConvSvc" class="com.innowhite.docconversion.impl.PdfPageToImageConversionService">
		<property name="pageExtractor" ref="pageExtractor"/>
		<property name="pdfToImageConverter" ref="imageMagickPageConverter"/>
		<property name="imageToSwfConverter" ref="png2SwfConverter"/>
	</bean>
	
	<bean id="thumbCreator" class="com.innowhite.docconversion.impl.ThumbnailCreatorImp">
		<property name="imageMagickDir" value="${imageMagickDir}"/>
		<property name="blankThumbnail" value="${BLANK_THUMBNAIL}"/>
	</bean>
	
	<bean id="generatedSlidesInfoHelper" class="com.innowhite.docconversion.GeneratedSlidesInfoHelperImp"/>
	
	<bean id="pdfToSwfSlidesGenerationService" class="com.innowhite.docconversion.impl.PdfToSwfSlidesGenerationService">
		<property name="counterService" ref="pageCounterService"/>
		<property name="pageConverter" ref="pdf2SwfPageConverter"/>
		<property name="pdfPageToImageConversionService" ref="imageConvSvc"/>
		<property name="thumbnailCreator" ref="thumbCreator"/>
		<property name="blankSlide" value="${BLANK_SLIDE}"/>
		<property name="maxConversionTime" value="${maxConversionTime}"/>
		<property name="swfSlidesGenerationProgressNotifier" ref="swfSlidesGenerationProgressNotifier"/>
	</bean>	
	
	<bean id="imageToSwfSlidesGenerationService" class="com.innowhite.docconversion.impl.ImageToSwfSlidesGenerationService">
		<property name="pngPageConverter" ref="png2SwfConverter"/>
		<property name="jpgPageConverter" ref="jpg2SwfConverter"/>
		<property name="thumbnailCreator" ref="thumbCreator"/>
		<property name="blankSlide" value="${BLANK_SLIDE}"/>
		<property name="maxConversionTime" value="${maxConversionTime}"/>
		<property name="swfSlidesGenerationProgressNotifier" ref="swfSlidesGenerationProgressNotifier"/>
	</bean>
	
	
	<bean id ="messagingService" class="com.innowhite.whiteboard.docconversion.messages.MessagingService" />
	
	<bean id="swfSlidesGenerationProgressNotifier" class="com.innowhite.docconversion.impl.SwfSlidesGenerationProgressNotifier">
		<property name="messagingService" ref="messagingService"/> 
		<property name="generatedSlidesInfoHelper" ref="generatedSlidesInfoHelper"/>
	</bean>	

	<!-- The Spring message listener container configuration -->
	<jms:listener-container container-type="default"
		connection-factory="connectionFactory" acknowledge="auto">
		<jms:listener destination="FOO.TEST" ref="simpleMessageListener"
			method="onMessage" />
	</jms:listener-container>



	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="com.mysql.jdbc.Driver"/> 
		<property name="url" value="jdbc:mysql://localhost:3306/ewhiteboard"/> <property 
		name="username" value="inno_user"/> <property name="password" value="inno_mysql"/> 
		<property name="initialSize" value="5"/> <property name="maxActive" value="10"/> 
		</bean> -->
	<!-- <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> 
		<property name="configLocation" value="WEB-INF/spring/Sqlmap-config.xml"/> 
		<property name="dataSource" ref="dataSource"/> </bean> <bean id="sqlMapClientTemplate" 
		class="org.springframework.orm.ibatis.SqlMapClientTemplate"> <property name="sqlMapClient" 
		ref="sqlMapClient" /> </bean> <bean id="messagePersistenceDAO" class="com.innowhite.whiteboard.docconversion.persistence.dao.MessagePersistenceDAO"> 
		<property name="sqlMapClientTemplate" ref="sqlMapClientTemplate" /> </bean> -->


</beans>
